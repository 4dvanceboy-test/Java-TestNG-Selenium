<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="3" passed="3">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="67741" started-at="2019-02-09T14:27:33Z" finished-at="2019-02-09T14:28:41Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="67741" started-at="2019-02-09T14:27:33Z" finished-at="2019-02-09T14:28:41Z">
      <class name="com.lambdatest.Tests.ParallelTest">
        <test-method status="PASS" signature="test(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.lambdatest.Tests.ParallelTest@1e88b3c]" name="test" duration-ms="56538" started-at="2019-02-09T19:57:33Z" data-provider="browsersDetails" finished-at="2019-02-09T19:58:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[internet explorer]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[11.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 8.1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.lambdatest.Tests.ParallelTest.test(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.lambdatest.Tests.ParallelTest@1e88b3c]" name="test" duration-ms="36692" started-at="2019-02-09T19:57:33Z" data-provider="browsersDetails" finished-at="2019-02-09T19:58:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[60.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 8.1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.lambdatest.Tests.ParallelTest.test(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="test(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.lambdatest.Tests.ParallelTest@1e88b3c]" name="test" duration-ms="18233" started-at="2019-02-09T19:57:33Z" data-provider="browsersDetails" finished-at="2019-02-09T19:57:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[60.0]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Windows 8.1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[public void com.lambdatest.Tests.ParallelTest.test(java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.lambdatest.Tests.ParallelTest@1e88b3c]" name="tearDown" is-config="true" duration-ms="11146" started-at="2019-02-09T19:57:52Z" finished-at="2019-02-09T19:58:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test status=SUCCESS method=ParallelTest.test(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.lambdatest.Tests.ParallelTest@1e88b3c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="FAIL" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.lambdatest.Tests.ParallelTest@1e88b3c]" name="tearDown" is-config="true" duration-ms="0" started-at="2019-02-09T19:58:10Z" finished-at="2019-02-09T19:58:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test status=SUCCESS method=ParallelTest.test(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.lambdatest.Tests.ParallelTest@1e88b3c] output={null}]]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[<html>
<head><title>502 Bad Gateway</title></head>
<body>
<center><h1>502 Bad Gateway</h1></center>
<hr><center>nginx/1.15.5</center>
</body>
</html>
Command duration or timeout: 273 milliseconds
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'hplappy', ip: '127.0.1.1', os.name: 'Linux', os.arch: 'amd64', os.version: '4.15.0-43-generic', java.version: '1.8.0_191'
Driver info: org.openqa.selenium.remote.RemoteWebDriver
Capabilities [{capabilities={moz:profile=C:\Users\ltuser\AppData\Local\Temp\1\rust_mozprofile.FfXMMeojJPUD, rotatable=false, timeouts={implicit=0, pageLoad=300000, script=30000}, pageLoadStrategy=normal, moz:headless=false, proxy={proxyAutoconfigUrl=http://127.0.0.1:43000/api/v1.0/proxy.pac, proxyType=PAC}, moz:accessibilityChecks=false, moz:useNonSpecCompliantPointerOrigin=false, webdriver.remote.sessionid=c54ba5f5-2622-4da2-a547-a244e177c426, acceptInsecureCerts=true, browserVersion=60.0, platformVersion=6.3, moz:processID=4160, browserName=firefox, platformName=windows_nt, moz:webdriverClick=true}, sessionId=c54ba5f5-2622-4da2-a547-a244e177c426, platform=ANY}]
Session ID: null]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: <html>
<head><title>502 Bad Gateway</title></head>
<body>
<center><h1>502 Bad Gateway</h1></center>
<hr><center>nginx/1.15.5</center>
</body>
</html>
Command duration or timeout: 273 milliseconds
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'hplappy', ip: '127.0.1.1', os.name: 'Linux', os.arch: 'amd64', os.version: '4.15.0-43-generic', java.version: '1.8.0_191'
Driver info: org.openqa.selenium.remote.RemoteWebDriver
Capabilities [{capabilities={moz:profile=C:\Users\ltuser\AppData\Local\Temp\1\rust_mozprofile.FfXMMeojJPUD, rotatable=false, timeouts={implicit=0, pageLoad=300000, script=30000}, pageLoadStrategy=normal, moz:headless=false, proxy={proxyAutoconfigUrl=http://127.0.0.1:43000/api/v1.0/proxy.pac, proxyType=PAC}, moz:accessibilityChecks=false, moz:useNonSpecCompliantPointerOrigin=false, webdriver.remote.sessionid=c54ba5f5-2622-4da2-a547-a244e177c426, acceptInsecureCerts=true, browserVersion=60.0, platformVersion=6.3, moz:processID=4160, browserName=firefox, platformName=windows_nt, moz:webdriverClick=true}, sessionId=c54ba5f5-2622-4da2-a547-a244e177c426, platform=ANY}]
Session ID: null
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678)
	at org.openqa.selenium.remote.RemoteWebDriver.executeScript(RemoteWebDriver.java:575)
	at com.lambdatest.Tests.ParallelTest.tearDown(ParallelTest.java:66)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:707)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:75)
	at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="tearDown(org.testng.ITestResult)[pri:0, instance:com.lambdatest.Tests.ParallelTest@1e88b3c]" name="tearDown" is-config="true" duration-ms="11156" started-at="2019-02-09T19:58:30Z" finished-at="2019-02-09T19:58:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test status=SUCCESS method=ParallelTest.test(java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:com.lambdatest.Tests.ParallelTest@1e88b3c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.lambdatest.Tests.ParallelTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
